<?php

namespace Pi2\Fractalia\SmsBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * NombrecortoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SmsRepository extends EntityRepository {
    /*
     * 
     * Se obitienen los sms buscados en caso de encontrarlos
     * @param string $string cadena a buscar
     * @return mixed collection or null
     */

    //
    public function findByString($string) {
        
        //Patron para identificar la fecha en el string
        $pattern = "/^(\d{2})-(\d{2})-(\d{2})-(\d{2})-(\d{2})-(\d{2})$/";
        $matches = array();
        $fecha = null;
        
        if (1 == preg_match($pattern, $string, $matches) and count($matches) == 7)
        {
            $datetime = $this->getDateTime($string);
            $fecha = $datetime->format("Y-m-d H:i:s");
        }
        
        
        $query = $this->getEntityManager()->createQuery(
                        "SELECT s 
                    FROM FractaliaSmsBundle:Sms s
                        INNER JOIN FractaliaSmsBundle:Mensaje m
                            WITH m.id = s.mensaje
                    WHERE
                        s.estadoEnvio in ('ERROR', 'POR_ENVIAR', 'ERROR_BUILD', 'ENVIADO')
                    AND
                    (                        
                        s.destinatario = :string OR
                        s.estadoEnvio = :string OR
                        s.respuestaApi = :string OR
                        s.fechaCreacion = :datetime OR
                        m.nombrePlantilla = :string OR
                        m.texto LIKE :pattern
                    )
                    ORDER BY 
                        s.fechaCreacion DESC"
                )->setParameters(
                array(
                    'string' => $string,
                    'pattern' => "%" . $string . "%",
                    'datetime' => (is_null($fecha)) ? $string : $fecha,
                )
        );

        try {
            return $query->getResult();
        } catch (\Doctrine\Orm\NoResultException $e) {
            return null;
        } catch (\Doctrine\Orm\ORMException $e) {
            print_r($e->getMessage());
            return $e;
        }
    }
    
    protected function getDateTime($string){
        
        return date_create_from_format('d-m-y-G-i-s', $string);
    }

}
